import streamlit as st
import yfinance as yf
import pandas as pd

# T√≠tulo da aplica√ß√£o web
st.set_page_config(page_title="Buscador B3 Gratuito", layout="centered")
st.title("üìà Buscador de Indicadores da B3 (Gratuito)")
st.markdown("""
Esta aplica√ß√£o busca informa√ß√µes e indicadores fundamentalistas b√°sicos de a√ß√µes da B3
usando dados do Yahoo Finance.
""")

# Campo de entrada para o ticker
# Predefine PETR4.SA para facilitar o primeiro teste do usu√°rio
ticker_input = st.text_input(
    "Digite o Ticker da A√ß√£o (ex: PETR4.SA, VALE3.SA):",
    value="PETR4.SA"
).upper() # Converte para mai√∫sculas automaticamente

# Bot√£o para buscar os indicadores
if st.button("üîç Buscar Indicadores"):
    if ticker_input:
        with st.spinner(f"Buscando dados para {ticker_input}..."):
            try:
                # Baixa as informa√ß√µes do ticker usando yfinance
                ticker = yf.Ticker(ticker_input)
                info = ticker.info # Dicion√°rio com v√°rias informa√ß√µes

                st.success(f"Dados encontrados para {ticker_input}!")
                st.subheader(f"üìä {info.get('longName', ticker_input)}") # Nome completo da empresa

                st.markdown("---") # Linha separadora

                # --- Principais Indicadores Fundamentalistas ---
                st.markdown("### Principais Indicadores Fundamentalistas:")

                # Fun√ß√£o auxiliar para exibir indicadores
                def display_indicator(label, value, format_str=None, default_text="N/D"):
                    if value is not None:
                        if format_str:
                            st.write(f"- **{label}:** {format_str.format(value)}")
                        else:
                            st.write(f"- **{label}:** {value}")
                    else:
                        st.write(f"- **{label}:** {default_text}")

                # Pre√ßo/Lucro (P/L)
                pe_ratio = info.get('forwardPE')
                if pe_ratio is None:
                    pe_ratio = info.get('trailingPE')
                display_indicator("P/L (Pre√ßo/Lucro)", pe_ratio, "{:.2f}")

                # Pre√ßo/Valor Patrimonial (P/VP)
                pb_ratio = info.get('priceToBook')
                display_indicator("P/VP (Pre√ßo/Valor Patrimonial)", pb_ratio, "{:.2f}")

                # Retorno sobre o Patrim√¥nio L√≠quido (ROE)
                roe = info.get('returnOnEquity')
                display_indicator("ROE (Retorno sobre o PL)", roe, "{:.2%}") # Formato percentual

                # Dividend Yield
                dividend_yield = info.get('dividendYield')
                display_indicator("Dividend Yield", dividend_yield, "{:.2%}")

                # Margem L√≠quida
                profit_margins = info.get('profitMargins')
                display_indicator("Margem L√≠quida", profit_margins, "{:.2%}")

                # --- Outras Informa√ß√µes da Empresa ---
                st.markdown("---")
                st.markdown("### Outras Informa√ß√µes:")

                # Setor e Ind√∫stria
                sector = info.get('sector')
                industry = info.get('industry')
                if sector and industry:
                    st.write(f"- **Setor/Ind√∫stria:** {sector} / {industry}")
                elif sector:
                    st.write(f"- **Setor:** {sector}")
                else:
                    st.write("- **Setor/Ind√∫stria:** N/D")

                # Capitaliza√ß√£o de Mercado
                market_cap = info.get('marketCap')
                if market_cap:
                    st.write(f"- **Capitaliza√ß√£o de Mercado:** R$ {market_cap:,.2f}")
                else:
                    st.write("- **Capitaliza√ß√£o de Mercado:** N/D")

                # Cota√ß√£o Atual
                current_price = info.get('currentPrice')
                if current_price:
                    st.write(f"- **Pre√ßo Atual:** R$ {current_price:.2f}")
                else:
                    st.write("- **Pre√ßo Atual:** N/D")

                # --- Hist√≥rico de Pre√ßos (Gr√°fico e Tabela) ---
                st.markdown("---")
                st.markdown("### Hist√≥rico de Pre√ßos (√öltimos 6 meses):")
                hist = ticker.history(period="6mo") # Pega os √∫ltimos 6 meses
                if not hist.empty:
                    # Gr√°fico interativo com Plotly (Streamlit usa por padr√£o)
                    st.line_chart(hist['Close'])
                    st.markdown("#### √öltimos Pre√ßos de Fechamento:")
                    st.dataframe(hist[['Open', 'High', 'Low', 'Close', 'Volume']].tail(10)) # Mostra as √∫ltimas 10 linhas
                else:
                    st.write("Hist√≥rico de pre√ßos n√£o dispon√≠vel.")


            except Exception as e:
                # Mensagem de erro mais detalhada e amig√°vel
                st.error(f"""
                **Erro ao buscar informa√ß√µes para '{ticker_input}'.**
                Por favor, verifique se:
                1. O ticker est√° correto (ex: `PETR4.SA`, `VALE3.SA`). Lembre-se do `.SA` para a√ß√µes da B3.
                2. Sua conex√£o com a internet est√° funcionando.
                3. O Yahoo Finance tem dados dispon√≠veis para este ticker.
                """)
                st.error(f"Detalhes t√©cnicos do erro: {e}")
    else:
        st.warning("Por favor, digite um ticker para buscar os indicadores.")

# Sidebar com exemplos de tickers
st.sidebar.markdown("### Exemplos de Tickers da B3:")
st.sidebar.write("- `PETR4.SA` (Petrobras)")
st.sidebar.write("- `VALE3.SA` (Vale)")
st.sidebar.write("- `ITUB4.SA` (Ita√∫ Unibanco)")
st.sidebar.write("- `BBDC4.SA` (Bradesco)")
st.sidebar.write("- `WEGE3.SA` (Weg)")
st.sidebar.write("- `MGLU3.SA` (Magazine Luiza)")
st.sidebar.markdown("---")
st.sidebar.info("Lembre-se sempre do `.SA` para a√ß√µes da B3!")

st.markdown("---")
st.caption("Dados fornecidos por Yahoo Finance. Para fins educacionais e de aprendizado.")
